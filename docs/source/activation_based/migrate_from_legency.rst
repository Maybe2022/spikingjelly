从老版本SpikingJelly迁移到新版本
=======================================
本教程作者： `fangwei123456 <https://github.com/fangwei123456>`_

新版的SpikingJelly改动较大，使用老版本SpikingJelly的用户若想迁移到新版本，则需要阅读此教程。
SpikingJelly的版本升级尽可能前向兼容，因此用户无需做出太多代码上的修改，即可轻松迁移到新版本。

推荐老版本用户也阅读新版本的教程 :doc:`../activation_based/basic_concept`。

“老版本SpikingJelly”均指的是版本号 ``<=0.0.0.0.12`` 的SpikingJelly。

子包重命名
-------------------------------------------
新版的SpikingJelly对子包进行了重命名，与老版本的对应关系为：

+------------------------+------------+
| 老版本         | 新版本              |
+========================+============+
| clock_driven   | activation_based   |
+------------------------+------------+
| event_driven   | timing_based       |
+------------------------+------------+

融合单步和多步模块
-------------------------------------------
``<=0.0.0.0.12`` 的老版本SpikingJelly，在默认情况下所有模块都是单步的，除非其名称含有前缀 `MultiStep`。\
而新版的SpikingJelly，则不再使用前缀对单步和多步模块进行区分，取而代之的是同一个模块，拥有单步和多步两种步进模式，\
使用 `step_mode` 进行控制。具体信息可以参见 :doc:`../activation_based/basic_concept`。

因而在新版本中不再有单独的多步模块，取而代之的则是融合了单步和多步的统一模块。例如，在老版本的SpikingJelly中，若想使用多步IF神经元，\
是按照如下方式：



